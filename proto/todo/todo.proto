syntax = "proto3";

package todo;

option go_package = "anabol1ks.todo.v1;todov1";


service UserService {
  rpc Register(RegisterRequest) returns (AuthResponse);
  rpc Login(LoginRequest) returns (AuthResponse);
  rpc GetProfile(GetProfileRequest) returns (UserResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (AuthResponse);
}

service TaskService {
  rpc CreateTask(CreateTaskRequest) returns (TaskResponse);
  rpc GetTasks(GetTasksRequest) returns (TasksList);
  rpc GetTask(GetTaskRequest) returns (TaskResponse);
  rpc UpdateTask(UpdateTaskRequest) returns (TaskResponse);
  rpc DeleteTask(DeleteTaskRequest) returns (Empty);
}

message RegisterRequest {
  string nickname = 1 [(validate.rules).string = { min_len: 4, max_len: 20 }];
  string email = 2 [(validate.rules).string = { email: true }];
  string password = 3 [(validate.rules).string = { min_len: 8 }];
}

message AuthResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message LoginRequest {
  string email = 1 [(validate.rules).string = { email: true }];
  string password = 2 [(validate.rules).string = { min_len: 8 }];
}

message GetProfileRequest {
  uint64 user_id = 1;
}

message UserResponse {
  string nickname = 1;
  string email = 2;
}

message CreateTaskRequest {
  string title = 1 [(validate.rules).string = { min_len: 2, max_len: 100 }];
  string description = 2 [(validate.rules).string = { min_len: 2, max_len: 500 }];
  uint64 user_id = 3;
}

message TaskResponse {
  uint64 id = 1;
  string title = 2;
  string description = 3;
  string status = 4;
  string due_date = 5; // ISO 8601 format
  uint64 user_id = 6;
  string created_at = 7; // ISO 8601 format
  string updated_at = 8; // ISO 8601 format
}

message GetTasksRequest {
  uint64 user_id = 1;
}

message GetTaskRequest {
  uint64 id = 1;
}


message TasksList {
  repeated TaskResponse tasks = 1;
}

message UpdateTaskRequest {
  uint64 id = 1;
  string title = 2 [(validate.rules).string = { min_len: 2, max_len: 100 }];
  string description = 3 [(validate.rules).string = { min_len: 2, max_len: 500 }];
  string status = 4 [(validate.rules).string = { in: ["pending", "in_progress", "done"] }];
  string due_date = 5; // ISO 8601 format
}

message DeleteTaskRequest {
  uint64 id = 1;
}

message Empty {
  string value = 1;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}